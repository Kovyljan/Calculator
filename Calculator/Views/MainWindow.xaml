<Window x:Class="Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calculator"
        xmlns:vm="clr-namespace:Calculator.ViewModels"
        mc:Ignorable="d"
         Title="Калькулятор" Height="450" Width="800" MinHeight="340" MinWidth="250">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--Cтиль кнопок-->
        <Style TargetType="Button">            
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--Отрисовка кнопки с заданием свойств для возможности изменения масштаба в анимации-->
                            <Border x:Name="backgroundElement" BorderThickness="0" CornerRadius="10" Background="{TemplateBinding Background}" RenderTransformOrigin=".5 .5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                            </Border>
                            <!--Создание и привязка свойств текста кнопок-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"                                          
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--Создание тригера изменяющего цвет кнопки при нажатии-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="backgroundElement" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            </Trigger>
                            <!--Создание тригера запускающего анимацию изменения размера кнопки при нажатии-->
                            <EventTrigger RoutedEvent="Button.Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="backgroundElement" FillBehavior="Stop">
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.7" AutoReverse="True"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.7" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Создание стилей кнопок разного цвета на основе общего стиля-->
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="orangeButton">
            <Setter Property="Background" Value="#FFFFAE00"/>
            <Setter Property="BorderBrush" Value="#FF706D6D"/>            
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="darkGreyButton">
            <Setter Property="Background" Value="#FF706D6D"/>
            <Setter Property="BorderBrush" Value="#FFFFAE00"/>            
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="greyButton">
            <Setter Property="Background" Value="#FFC7C2C2"/>
            <Setter Property="BorderBrush" Value="#FFC7C2C2"/>            
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        
    </Window.Resources>

    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.25*" MinHeight="60"/>
            <RowDefinition Height="0.6*"/>
            <RowDefinition Height="0.15*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border  MinHeight="40" Grid.ColumnSpan="5" Margin="5,5,5,2" Padding="5,5,5,5" CornerRadius="10"  Background="#FFBBFFF0" >
            <TextBlock x:Name="DisplayText" Text="{Binding Display, Mode=TwoWay}" Margin="10,10,10,10" Padding="10,10,10,10" VerticalAlignment="Center" Background="#FFBBFFF0" TextAlignment="Right" FontSize="22"/>
        </Border>
        <UniformGrid MinHeight="30" Grid.Row="1" Grid.ColumnSpan="5" Rows="4" Columns="5" Background="Black">
            <Button Margin="5,2,2,2" Style="{StaticResource greyButton}" Content="CE" Command="{Binding Path=ButtonPress}" CommandParameter="CE"/>
            <Button Style="{StaticResource greyButton}" Content="C" Command="{Binding Path=ButtonPress}" CommandParameter="C"/>
            <Button Style="{StaticResource greyButton}" Content="←" Command="{Binding Path=ButtonPress}" CommandParameter="←"/>
            <Button Style="{StaticResource greyButton}" Content="±" Command="{Binding Path=ButtonPress}" CommandParameter="±"/>
            <Button Margin="2,2,5,2" Style="{StaticResource orangeButton}" Content="/" Command="{Binding Path=OperationButtonPress}" CommandParameter="/"/>

            <Button Margin="5,2,2,2" Style="{StaticResource darkGreyButton}" Content="7" Command="{Binding Path=ButtonPress}" CommandParameter="7"/>
            <Button Style="{StaticResource darkGreyButton}" Content="8" Command="{Binding Path=ButtonPress}" CommandParameter="8"/>
            <Button Style="{StaticResource darkGreyButton}" Content="9" Command="{Binding Path=ButtonPress}" CommandParameter="9"/>
            <Button Style="{StaticResource greyButton}" Content="1/x" Command="{Binding Path=SingularOperationButtonPress}" CommandParameter="1/x"/>
            <Button Margin="2,2,5,2" Style="{StaticResource orangeButton}" Content="x" Command="{Binding Path=OperationButtonPress}" CommandParameter="x"/>

            <Button Margin="5,2,2,2" Style="{StaticResource darkGreyButton}" Content="4" Command="{Binding Path=ButtonPress}" CommandParameter="4"/>
            <Button Style="{StaticResource darkGreyButton}" Content="5" Command="{Binding Path=ButtonPress}" CommandParameter="5"/>
            <Button Style="{StaticResource darkGreyButton}" Content="6" Command="{Binding Path=ButtonPress}" CommandParameter="6"/>
            <Button Style="{StaticResource greyButton}" Content="x²" Command="{Binding Path=SingularOperationButtonPress}" CommandParameter="x²"/>
            <Button Margin="2,2,5,2" Style="{StaticResource orangeButton}" Content="-" Command="{Binding Path=OperationButtonPress}" CommandParameter="-"/>

            <Button Margin="5,2,2,2" Style="{StaticResource darkGreyButton}" Content="1" Command="{Binding Path=ButtonPress}" CommandParameter="1"/>
            <Button Style="{StaticResource darkGreyButton}" Content="2" Command="{Binding Path=ButtonPress}" CommandParameter="2"/>
            <Button Style="{StaticResource darkGreyButton}" Content="3" Command="{Binding Path=ButtonPress}" CommandParameter="3"/>
            <Button Style="{StaticResource greyButton}" Content="√x" Command="{Binding Path=SingularOperationButtonPress}" CommandParameter="√x"/>
            <Button Margin="2,2,5,2" Style="{StaticResource orangeButton}" Content="+" Command="{Binding Path=OperationButtonPress}" CommandParameter="+"/>            
        </UniformGrid>

        <Button Margin="2,2,2,5" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource darkGreyButton}" Content="0" Command="{Binding Path=ButtonPress}" CommandParameter="0"/>
        <Button Margin="2,2,2,5" Grid.Row="2" Grid.Column="2" Style="{StaticResource darkGreyButton}" Content="," Command="{Binding Path=ButtonPress}" CommandParameter=","/>
        <Button Margin="2,2,2,5" Grid.Row="2" Grid.Column="3" Style="{StaticResource greyButton}" Content="%" Command="{Binding Path=SingularOperationButtonPress}" CommandParameter="%"/>
        <Button Margin="2,2,5,5" Grid.Row="2" Grid.Column="4" Style="{StaticResource orangeButton}" Content="=" Command="{Binding Path=OperationButtonPress}" CommandParameter="="/>        
    </Grid>
</Window>